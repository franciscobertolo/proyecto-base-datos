Funciones:
a) Calcular el promedio de calificaciones para un medio:

CREATE FUNCTION calcular_promedio_calificaciones(media_id_param INT) 
RETURNS DECIMAL(3,2)
BEGIN
    DECLARE avg_rating DECIMAL(3,2);
    SELECT AVG(numero_estrellas) INTO avg_rating
    FROM Opinion
    WHERE media_id = media_id_param;
    RETURN avg_rating;
END;

b) Obtener el número total de medios en la colección de un usuario:

CREATE FUNCTION total_medios_usuario(usuario_id_param INT) 
RETURNS INT
BEGIN
    DECLARE total INT;
    SELECT COUNT(*) INTO total
    FROM Coleccion
    WHERE usuario_id = usuario_id_param;
    RETURN total;
END;

Procedimientos almacenados:
a) Agregar un nuevo medio a la colección de un usuario:

CREATE PROCEDURE agregar_a_coleccion(
    IN p_usuario_id INT,
    IN p_media_id INT,
    IN p_fecha_agregado DATE
)
BEGIN
    INSERT INTO Coleccion (usuario_id, media_id, fecha_agregado)
    VALUES (p_usuario_id, p_media_id, p_fecha_agregado);
END;

b) Actualizar la información de un medio:

CREATE PROCEDURE actualizar_media(
    IN p_media_id INT,
    IN p_titulo VARCHAR(255),
    IN p_fecha_publicacion DATE,
    IN p_plataforma_id INT
)
BEGIN
    UPDATE Media
    SET titulo = p_titulo,
        fecha_publicacion = p_fecha_publicacion,
        plataforma_id = p_plataforma_id
    WHERE media_id = p_media_id;
END;

Triggers:
a) Verificar que la fecha de publicación no sea futura al insertar un nuevo medio:

CREATE TRIGGER check_fecha_publicacion
BEFORE INSERT ON Media
FOR EACH ROW
BEGIN
    IF NEW.fecha_publicacion > CURDATE() THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'La fecha de publicación no puede ser futura';
    END IF;
END;

b) Actualizar automáticamente la fecha de agregado en la colección cuando se inserta una nueva opinión:

CREATE TRIGGER actualizar_fecha_coleccion
AFTER INSERT ON Opinion
FOR EACH ROW
BEGIN
    UPDATE Coleccion
    SET fecha_agregado = CURDATE()
    WHERE usuario_id = NEW.usuario_id AND media_id = NEW.media_id;
END;

c) Verificar que el número de estrellas esté entre 1 y 5 al insertar o actualizar una opinión:

CREATE TRIGGER check_numero_estrellas
BEFORE INSERT ON Opinion
FOR EACH ROW
BEGIN
    IF NEW.numero_estrellas < 1 OR NEW.numero_estrellas > 5 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'El número de estrellas debe estar entre 1 y 5';
    END IF;
END;