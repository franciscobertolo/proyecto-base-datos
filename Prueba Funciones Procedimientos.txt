-- 1. Probar calcular_promedio_calificaciones
-- Primero, vamos a ver las calificaciones existentes para un medio
SELECT media_id, numero_estrellas FROM Opinion WHERE media_id = 1;
-- Luego llamamos a la función
SELECT calcular_promedio_calificaciones(1) as promedio_the_last_of_us;

-- 2. Probar total_medios_usuario
-- Primero, veamos la colección actual del usuario
SELECT * FROM Coleccion WHERE usuario_id = 1;
-- Luego llamamos a la función
SELECT total_medios_usuario(1) as total_medios_juan;

-- 3. Probar agregar_a_coleccion
-- Primero, veamos el estado actual de la colección
SELECT * FROM Coleccion WHERE usuario_id = 1;
-- Ejecutamos el procedimiento para agregar un nuevo medio
CALL agregar_a_coleccion(1, 5, CURDATE());
-- Verificamos que se haya agregado
SELECT * FROM Coleccion WHERE usuario_id = 1;

-- 4. Probar actualizar_media
-- Primero, veamos la información actual del medio
SELECT * FROM Media WHERE media_id = 1;
-- Ejecutamos el procedimiento para actualizar
CALL actualizar_media(1, 'The Last of Us Part I', '2023-01-15', 2);
-- Verificamos los cambios
SELECT * FROM Media WHERE media_id = 1;

-- Prueba adicional combinando funciones
-- Ver el promedio de calificaciones después de agregar más opiniones
INSERT INTO Opinion (usuario_id, media_id, numero_estrellas, comentario)
VALUES (2, 1, 4, 'Muy buen juego');

SELECT 
    m.titulo,
    calcular_promedio_calificaciones(m.media_id) as promedio,
    total_medios_usuario(1) as total_en_coleccion
FROM Media m
WHERE m.media_id = 1;

-- Prueba completa de un usuario
SELECT 
    u.nombre,
    total_medios_usuario(u.usuario_id) as total_medios,
    m.titulo,
    calcular_promedio_calificaciones(m.media_id) as promedio_calificacion
FROM Usuario u
JOIN Coleccion c ON u.usuario_id = c.usuario_id
JOIN Media m ON c.media_id = m.media_id
WHERE u.usuario_id = 1;